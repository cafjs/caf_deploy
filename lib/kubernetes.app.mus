apiVersion: v1
kind: Service
metadata:
  name: {{{id}}}
  namespace: {{{k8SNamespace}}}
  labels:
     app: {{{id}}}
     tier: app
spec:
  ports:
  - port: 3000
    targetPort: 3000
  selector:
    app: {{{id}}}
    tier: app
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{{id}}}
  namespace: {{{k8SNamespace}}}
spec:
  selector:
    matchLabels:
      app: {{{id}}}
      tier: app
  replicas: {{{instances}}}
  template:
    metadata:
      labels:
        app: {{{id}}}
        tier: app
      annotations:
        props: {{{props}}}
        touch: {{{touch}}}
        {{#isUntrusted}}
        kubernetes.io/egress-bandwidth: {{{egressLimit}}}
        {{/isUntrusted}}
    spec:
      automountServiceAccountToken: {{{isDeployer}}}
      {{#isDeployer}}
      serviceAccountName: deployer-account
      {{/isDeployer}}
      {{#isGvisor}}
      runtimeClassName: gvisor
      {{/isGvisor}}
      initContainers:
      - name: init-redis
        image: redis:6
        command: ['sh', '-c', 'until  timeout 2 redis-cli -h redis-{{{id}}}.{{{redisNamespace}}}.svc.cluster.local ping; do echo waiting for redis; sleep 2; done;']
      containers:
      - name: master
        image: {{{image}}}
        imagePullPolicy: Always
        env:
        {{#isCDN}}
        - name: APP_CDN
          value: {{{appCDN}}}
        - name: APP_SUBDIR_CDN
          value: {{{appSubdirCDN}}}
        {{/isCDN}}
        - name:  KEYS_DIR
          value: /keys
        - name:  TRUSTED_PUB_KEY_FILE
          value: rsa_pub.pem
      {{#isAccounts}}
        - name:  PUBLIC_KEY_FILE
          value: rsa_pub.pem
        - name:  PRIVATE_KEY_FILE
          value: rsa_priv.pem
        - name:  RECAPTCHA_PUBLIC_KEY_FILE
          value: reCaptcha_pub.txt
        - name:  RECAPTCHA_PRIVATE_KEY_FILE
          value: reCaptcha_priv.txt
        - name:  RECAPTCHA_KEYS_DIR
          value: /recaptcha
        - name:  SMTP_DIR
          value: /smtp
        - name:  SMTP_FILE
          value: smtp.json
        - name: ENABLE_SMTP
          value: 'true'
      {{/isAccounts}}
      {{#isPeople}}
        - name: APP_INFO_DIR
          value: /appInfo
        - name: APP_INFO_FILE
          value: appInfo.json
        - name: PAYPAL_DIR
          value: /paypal
        - name: PAYPAL_FILE
          value: paypal.json
      {{/isPeople}}
        - name: APP_PUBLISHER
          value: {{{appPublisher}}}
        - name: APP_LOCAL_NAME
          value: {{{appLocalName}}}
        - name: APP_SUFFIX
          value: {{{appSuffix}}}
        - name: IOT_DEVICE_MANAGER_APP_URL
          value: https://root-gadget.{{{appSuffix}}}
        - name: ACCOUNTS_URL
          value: https://root-accounts.{{{appSuffix}}}
        - name: REGISTRY_ADDRESS
          value: gcr.io/cafjs-k8
        - name: PAAS
          value: kubernetes
        - name: REDIS_PORT_6379_TCP_ADDR
          value: redis-{{{id}}}.{{{redisNamespace}}}.svc.cluster.local
        volumeMounts:
        - name: {{#isAccounts}}privkey{{/isAccounts}}{{^isAccounts}}pubkey{{/isAccounts}}
          mountPath: /keys
          readOnly: true
      {{#isAccounts}}
        - name: recaptcha
          mountPath: /recaptcha
          readOnly: true
        - name: smtp
          mountPath: /smtp
          readOnly: true
      {{/isAccounts}}
      {{#isPeople}}
        - name: app-info
          mountPath: /appInfo
          readOnly: true
        - name: paypal
          mountPath: /paypal
          readOnly: true
      {{/isPeople}}
        args: {{{args}}}{{^args}}[]{{/args}}
        resources:
          requests:
            cpu:  {{{cpus}}}
            memory: {{{memory}}}
            ephemeral-storage: {{{storage}}}
        {{#isUntrusted}}
          limits:
            memory:  {{{memoryLimit}}}
            cpu: {{{cpusLimit}}}
            ephemeral-storage: {{{storageLimit}}}
        {{/isUntrusted}}
        ports:
        - containerPort: 3000
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
          httpGet:
            path: /ping
            port: 3000
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
          httpGet:
            path: /ping
            port: 3000
      nodeSelector:
        {{{poolKey}}}: {{{poolValue}}}
      volumes:
      {{#isPeople}}
      - name : app-info
        secret:
          secretName: app-info-keys
      - name : paypal
        secret:
          secretName: paypal-keys
      {{/isPeople}}
      {{#isAccounts}}
      - name : privkey
        secret:
          secretName: private-key
      - name : recaptcha
        secret:
          secretName: recaptcha-keys
      - name : smtp
        secret:
          secretName: smtp-keys
      {{/isAccounts}}
      {{^isAccounts}}
      - name : pubkey
        secret:
          secretName: public-key
      {{/isAccounts}}
---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{{id}}}
  namespace: {{{k8SNamespace}}}
spec:
  podSelector:
    matchLabels:
      app: {{{id}}}
      tier: app
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          tier: redis
      podSelector:
        matchLabels:
          app: {{{id}}}
          tier: redis
    - namespaceSelector:
        matchLabels:
          tier: frontend
      podSelector:
        matchLabels:
          app: nginx
    - podSelector:
        matchLabels:
          app: {{{id}}}
          tier: app
