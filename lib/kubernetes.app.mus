apiVersion: v1
kind: Service
metadata:
  name: {{{id}}}
  namespace: {{{k8SNamespace}}}
  labels:
     app: {{{id}}}
     tier: app
spec:
  ports:
  - port: 3000
    targetPort: 3000
  selector:
    app: {{{id}}}
    tier: app
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{{id}}}
  namespace: {{{k8SNamespace}}}
spec:
  selector:
    matchLabels:
      app: {{{id}}}
      tier: app
  replicas: {{{instances}}}
  template:
    metadata:
      labels:
        app: {{{id}}}
        tier: app
      annotations:
        touch: {{{touch}}}
    spec:
      automountServiceAccountToken: {{{isDeployer}}}
      {{#isDeployer}}
      serviceAccountName: deployer-account
      {{/isDeployer}}
      initContainers:
      - name: init-redis
        image: redis:3
        command: ['sh', '-c', 'until  timeout 2 redis-cli -h redis-{{{id}}}.{{{redisNamespace}}}.svc.cluster.local ping; do echo waiting for redis; sleep 2; done;']
      containers:
      - name: master
        image: {{{image}}}
        imagePullPolicy: Always
        env:
        - name:  KEYS_DIR
          value: /keys
        - name:  TRUSTED_PUB_KEY_FILE
          value: rsa_pub.pem
      {{#isAccounts}}
        - name:  PUBLIC_KEY_FILE
          value: rsa_pub.pem
        - name:  PRIVATE_KEY_FILE
          value: rsa_priv.pem
      {{/isAccounts}}
        - name: APP_PUBLISHER
          value: {{{appPublisher}}}
        - name: APP_LOCAL_NAME
          value: {{{appLocalName}}}
        - name: APP_SUFFIX
          value: {{{appSuffix}}}
        - name: IOT_DEVICE_MANAGER_APP_URL
          value: https://root-gadget.{{{appSuffix}}}
        - name: ACCOUNTS_URL
          value: https://root-accounts.{{{appSuffix}}}
        - name: REGISTRY_ADDRESS
          value: gcr.io/cafjs-k8
        - name: PAAS
          value: kubernetes
        - name: REDIS_PORT_6379_TCP_ADDR
          value: redis-{{{id}}}.{{{redisNamespace}}}.svc.cluster.local
        volumeMounts:
        - name: {{#isAccounts}}privkey{{/isAccounts}}{{^isAccounts}}pubkey{{/isAccounts}}
          mountPath: /keys
          readOnly: true
        args: {{{args}}}{{^args}}[]{{/args}}
        resources:
          requests:
            cpu:  {{{cpus}}}
            memory: {{{memory}}}
          limits:
            memory:  {{{memoryLimit}}}
        ports:
        - containerPort: 3000
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
          httpGet:
            path: /ping
            port: 3000
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
          httpGet:
            path: /ping
            port: 3000
      volumes:
      {{#isAccounts}}
      - name : privkey
        secret:
          secretName: private-key
      {{/isAccounts}}
      {{^isAccounts}}
      - name : pubkey
        secret:
          secretName: public-key
      {{/isAccounts}}
